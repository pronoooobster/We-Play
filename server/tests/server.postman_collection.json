{
	"info": {
		"_postman_id": "b0164778-53aa-477e-a81f-a369ea39b7c1",
		"name": "Server postman collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29410522"
	},
	"item": [
		{
			"name": "post user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"pm.test('Friendslist is an array', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.friendslist).to.be.an('array');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "   {\r\n        \"userName\": \"Adam\",\r\n        \"email\": \"adamf@yahoo.com\",\r\n        \"date_of_birth\": \"2000-08-05\",\r\n        \"password\": \"agg666\",\r\n        \"friendslist\": [],\r\n        \"clansList\": []\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"pm.test('Check userName is not empty', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.userName).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Value should not be empty');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users/Adam",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"Adam"
					]
				}
			},
			"response": []
		},
		{
			"name": "post a game",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"awesome game\",\r\n    \"teamSize\" : 3,\r\n    \"description\" : \"the best game ever created\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/games",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"games"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a specific game",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"pm.test('Response has required fields', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData._id).to.exist;\r",
							"    pm.expect(responseData.name).to.exist;\r",
							"    pm.expect(responseData.teamSize).to.exist;\r",
							"    pm.expect(responseData.description).to.exist;\r",
							"})\r",
							"pm.test('teamSize is a non-negative integer', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.teamSize).to.be.a('number');\r",
							"    pm.expect(responseData.teamSize).to.be.at.least(0);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/games/awesome game",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"games",
						"awesome game"
					]
				}
			},
			"response": []
		},
		{
			"name": "create squad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"pm.test('Validate the name is not empty', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.name).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, 'Name field should not be empty');\r",
							"})\r",
							"pm.test('The maxPlayers field is a non-negative integer', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.maxPlayers).to.be.a('number');\r",
							"    pm.expect(responseData.maxPlayers).to.be.at.least(0);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\" : 3,\r\n    \"name\": \"amigos\",\r\n    \"maxPlayers\" : \"3\",\r\n    \"currentPlayers\" : [\"65034d8caac97a6c04d5fd8c\"],\r\n    \"description\": \"this squad is only for the reals\",\r\n    \"game\" : \"65034d18aac97a6c04d5fd85\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/squads",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"squads"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a specific squad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/squads/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"squads",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "create a clan",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 201', function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"})\r",
							"pm.test('Validate the name is not empty', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.name).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, 'Name field should not be empty');\r",
							"})\r",
							"pm.test('Size is a non-negative integer', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.size).to.be.a('number', 'Size should be a number');\r",
							"    pm.expect(responseData.size).to.be.at.least(0, 'Size should be non-negative');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"clash\",\r\n    \"size\" : \"50\",\r\n    \"users\" : [\"65034d8caac97a6c04d5fd8c\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/clans",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clans"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a specific clan",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"})\r",
							"pm.test('Response has the required fields', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.name).to.exist.and.to.be.a('string');\r",
							"    pm.expect(responseData.size).to.exist.and.to.be.a('number');\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/clans/clash",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"clans",
						"clash"
					]
				}
			},
			"response": []
		},
		{
			"name": "post an administrator",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 201', function () {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Carlos Campos\",\r\n    \"id\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/administrators",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"administrators"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a specific administrator",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"pm.test('Response has the required fields', function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData._id).to.exist;\r",
							"    pm.expect(responseData.name).to.exist;\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"    pm.expect(responseData.__v).to.exist;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/administrators/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"administrators",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch user's data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"aaaadddammmm@student.chalmers.se\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/Adam",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"Adam"
					]
				}
			},
			"response": []
		}
	]
}